
/**
 * cluster: Tests of cluster analysis algorithms.
 *
 * <p>This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */


package org.hermit.test.cluster;


import org.hermit.geometry.MathTools;
import org.hermit.geometry.Point;


/**
 * Big Voronoi test scenario.  This class runs a large Voronoi test,
 * with 100 input sites, and does a fairly good check of the results.
 * 
 * The input and output data came from here:
 * http://people.sc.fsu.edu/~burkardt/c_src/sweep2/sweep2.html
 */
public class BigVoronoiTest
    extends VoronoiTest
{

    // Input sites.
    private static final Point[] BIG_SITES = {
        new Point(0.532095, 0.894141),
        new Point(0.189043, 0.613426),
        new Point(0.550977, 0.415724),
        new Point(0.00397384, 0.60576),
        new Point(0.89423, 0.666812),
        new Point(0.0730728, 0.740658),
        new Point(0.64018, 0.926186),
        new Point(0.389914, 0.553149),
        new Point(0.046918, 0.172275),
        new Point(0.820327, 0.578957),
        new Point(0.166575, 0.597895),
        new Point(0.587999, 0.824301),
        new Point(0.184717, 0.0608049),
        new Point(0.264707, 0.661072),
        new Point(0.564959, 0.824897),
        new Point(0.986991, 0.654621),
        new Point(0.214221, 0.611877),
        new Point(0.997171, 0.807318),
        new Point(0.233578, 0.380796),
        new Point(0.209772, 0.585171),
        new Point(0.631619, 0.418295),
        new Point(0.441601, 0.474479),
        new Point(0.246242, 0.196578),
        new Point(0.243191, 0.428592),
        new Point(0.129101, 0.460463),
        new Point(0.808454, 0.240363),
        new Point(0.23591, 0.362678),
        new Point(0.841259, 0.0182264),
        new Point(0.825533, 0.867529),
        new Point(0.780973, 0.282859),
        new Point(0.492706, 0.0717757),
        new Point(0.0641069, 0.0241644),
        new Point(0.711451, 0.621806),
        new Point(0.532239, 0.872561),
        new Point(0.264527, 0.947361),
        new Point(0.984485, 0.373498),
        new Point(0.890788, 0.0900603),
        new Point(0.81489, 0.765458),
        new Point(0.656357, 0.383494),
        new Point(0.161836, 0.878997),
        new Point(0.789622, 0.367808),
        new Point(0.00529994, 0.694075),
        new Point(0.751558, 0.0541492),
        new Point(0.315169, 0.989785),
        new Point(0.0675723, 0.642346),
        new Point(0.144209, 0.130059),
        new Point(0.755242, 0.723929),
        new Point(0.0258396, 0.306045),
        new Point(0.00905612, 0.544864),
        new Point(0.0917369, 0.0311395),
        new Point(0.000120247, 0.760615),
        new Point(0.599014, 0.406906),
        new Point(0.0209242, 0.0676926),
        new Point(0.402961, 0.743223),
        new Point(0.536965, 0.776167),
        new Point(0.791622, 0.4288),
        new Point(0.0492686, 0.546021),
        new Point(0.321031, 0.883358),
        new Point(0.45994, 0.0493888),
        new Point(0.306635, 0.920045),
        new Point(0.290264, 0.480864),
        new Point(0.117081, 0.709596),
        new Point(0.663268, 0.827229),
        new Point(0.25703, 0.908703),
        new Point(0.138396, 0.712536),
        new Point(0.37325, 0.578061),
        new Point(0.792062, 0.598336),
        new Point(0.761925, 0.679885),
        new Point(0.498106, 0.0823257),
        new Point(0.0791993, 0.879007),
        new Point(0.389481, 0.161374),
        new Point(0.909555, 0.33623),
        new Point(0.78771, 0.527877),
        new Point(0.87391, 0.282804),
        new Point(0.914291, 0.579771),
        new Point(0.126212, 0.635836),
        new Point(0.962689, 0.412397),
        new Point(0.662097, 0.205412),
        new Point(0.514842, 0.35217),
        new Point(0.573771, 0.571652),
        new Point(0.541641, 0.302552),
        new Point(0.880047, 0.447681),
        new Point(0.854456, 0.455932),
        new Point(0.882323, 0.00625933),
        new Point(0.0835167, 0.817145),
        new Point(0.868329, 0.54442),
        new Point(0.211671, 0.598359),
        new Point(0.169315, 0.4421),
        new Point(0.116072, 0.753312),
        new Point(0.900911, 0.0493624),
        new Point(0.889781, 0.970528),
        new Point(0.209244, 0.783234),
        new Point(0.0556217, 0.973298),
        new Point(0.787673, 0.0775736),
        new Point(0.327654, 0.267293),
        new Point(0.571657, 0.956988),
        new Point(0.519674, 0.443726),
        new Point(0.0206049, 0.472568),
        new Point(0.00635056, 0.409455),
        new Point(0.414254, 0.229849),
    };
    
    
    // Expected vertices.  { x, y } indicates a Voronoi vertex at
    // the point (x, y).
    private static final Point[] BIG_VERTS = {
        new Point(0.419582, -2.435700),
        new Point(0.565847, -1.003264),
        new Point(0.324966, -0.950947),
        new Point(0.869151, 0.037499),
        new Point(0.300812, -0.463619),
        new Point(0.613461, -0.420642),
        new Point(0.793528, 0.028994),
        new Point(0.608770, -0.133270),
        new Point(0.857338, 0.060132),
        new Point(0.067141, 0.070358),
        new Point(0.840710, 0.071597),
        new Point(0.129055, 0.074721),
        new Point(0.618791, 0.013896),
        new Point(0.448758, 0.100928),
        new Point(0.082218, 0.099566),
        new Point(0.321727, 0.040586),
        new Point(0.077349, 0.109190),
        new Point(0.437804, 0.113620),
        new Point(0.218773, 0.127199),
        new Point(0.296482, 0.091986),
        new Point(0.626385, 0.082205),
        new Point(0.722244, 0.138898),
        new Point(0.830634, 0.154811),
        new Point(0.477547, 0.168232),
        new Point(0.749045, 0.165226),
        new Point(0.321189, 0.192515),
        new Point(0.355334, 0.212446),
        new Point(0.889503, 0.187059),
        new Point(0.735216, 0.223136),
        new Point(0.547788, 0.186921),
        new Point(0.520067, 0.192401),
        new Point(0.827441, 0.282775),
        new Point(0.245294, 0.279890),
        new Point(0.138555, 0.250245),
        new Point(0.463117, 0.292187),
        new Point(1.008234, 0.231789),
        new Point(0.137955, 0.255166),
        new Point(1.034507, 0.199756),
        new Point(0.827464, 0.321040),
        new Point(0.633847, 0.293635),
        new Point(0.688146, 0.295385),
        new Point(0.147205, 0.273789),
        new Point(0.846367, 0.339784),
        new Point(0.603676, 0.336394),
        new Point(0.574582, 0.352390),
        new Point(0.717875, 0.332198),
        new Point(0.566469, 0.364866),
        new Point(0.624295, 0.386896),
        new Point(0.937997, 0.373006),
        new Point(0.409040, 0.336655),
        new Point(0.153601, 0.361293),
        new Point(0.507367, 0.398470),
        new Point(0.129143, 0.340785),
        new Point(0.857504, 0.382081),
        new Point(0.906422, 0.395032),
        new Point(0.848176, 0.392641),
        new Point(0.201987, 0.412015),
        new Point(0.842804, 0.396593),
        new Point(1.199456, 0.145229),
        new Point(0.108630, 0.362417),
        new Point(0.093729, 0.372381),
        new Point(0.725906, 0.400426),
        new Point(0.457785, 0.401087),
        new Point(0.396472, 0.364372),
        new Point(0.336883, 0.384883),
        new Point(0.070569, 0.428117),
        new Point(0.345321, 0.383951),
        new Point(0.350844, 0.381411),
        new Point(-0.258576, 0.192683),
        new Point(0.361953, 0.383356),
        new Point(0.710026, 0.447837),
        new Point(0.807207, 0.479031),
        new Point(0.881814, 0.496974),
        new Point(0.030149, 0.511163),
        new Point(0.077761, 0.492583),
        new Point(0.834537, 0.504386),
        new Point(0.366080, 0.481176),
        new Point(0.589040, 0.487825),
        new Point(0.708234, 0.475123),
        new Point(0.588980, 0.489705),
        new Point(0.589004, 0.489809),
        new Point(0.217846, 0.498748),
        new Point(0.827561, 0.538384),
        new Point(0.936319, 0.503577),
        new Point(0.215419, 0.506318),
        new Point(0.951126, 0.499738),
        new Point(0.179037, 0.516606),
        new Point(0.329909, 0.531040),
        new Point(0.168173, 0.523634),
        new Point(0.788733, 0.563178),
        new Point(0.506479, 0.524707),
        new Point(0.123960, 0.535690),
        new Point(0.187995, 0.590926),
        new Point(0.192680, 0.594363),
        new Point(0.028251, 0.577126),
        new Point(0.201304, 0.607314),
        new Point(0.678654, 0.517258),
        new Point(0.738998, 0.566250),
        new Point(0.670378, 0.520504),
        new Point(0.106725, 0.574665),
        new Point(0.867187, 0.593460),
        new Point(0.052285, 0.595349),
        new Point(0.091215, 0.587952),
        new Point(0.290765, 0.564461),
        new Point(0.482330, 0.557553),
        new Point(0.291447, 0.580141),
        new Point(-0.161545, 0.480541),
        new Point(0.282872, 0.591927),
        new Point(0.160033, 0.631376),
        new Point(0.291962, 0.584240),
        new Point(1.043941, 0.526576),
        new Point(0.867003, 0.614704),
        new Point(0.758188, 0.632161),
        new Point(0.936674, 0.630762),
        new Point(0.021036, 0.649671),
        new Point(0.839768, 0.637614),
        new Point(0.132837, 0.674101),
        new Point(0.100332, 0.670078),
        new Point(0.172997, 0.667722),
        new Point(0.826502, 0.657407),
        new Point(0.205257, 0.671579),
        new Point(0.071305, 0.691447),
        new Point(0.475217, 0.628239),
        new Point(0.056430, 0.692279),
        new Point(0.199241, 0.681133),
        new Point(0.124900, 0.731646),
        new Point(0.354953, 0.666606),
        new Point(1.186539, 0.512269),
        new Point(0.099261, 0.731054),
        new Point(0.689921, 0.691489),
        new Point(0.809479, 0.709630),
        new Point(0.830384, 0.696690),
        new Point(0.475748, 0.644876),
        new Point(0.030824, 0.729533),
        new Point(0.211183, 0.710443),
        new Point(0.493778, 0.662825),
        new Point(0.610858, 0.683896),
        new Point(0.167016, 0.754704),
        new Point(0.085468, 0.777922),
        new Point(0.950210, 0.733761),
        new Point(0.575492, 0.786441),
        new Point(0.639225, 0.713227),
        new Point(0.636173, 0.712511),
        new Point(0.629386, 0.729299),
        new Point(0.045552, 0.783372),
        new Point(0.303894, 0.752535),
        new Point(0.911624, 0.762031),
        new Point(0.149132, 0.810391),
        new Point(0.511453, 0.823229),
        new Point(0.149972, 0.813508),
        new Point(0.310186, 0.783000),
        new Point(0.742780, 0.805428),
        new Point(0.120514, 0.850809),
        new Point(0.901053, 0.808064),
        new Point(0.264479, 0.834032),
        new Point(0.750260, 0.823787),
        new Point(0.455024, 0.820463),
        new Point(0.577619, 0.868650),
        new Point(0.223193, 0.849756),
        new Point(0.005291, 0.842767),
        new Point(0.287126, 0.891222),
        new Point(0.623904, 0.870217),
        new Point(0.590680, 0.883741),
        new Point(0.593340, 0.885871),
        new Point(0.279542, 0.924393),
        new Point(0.588385, 0.902582),
        new Point(0.425219, 0.850254),
        new Point(0.925199, 0.876897),
        new Point(0.426875, 0.882648),
        new Point(0.732439, 0.895540),
        new Point(0.300192, 0.956226),
        new Point(0.194772, 0.940833),
        new Point(0.120525, 0.939434),
        new Point(-0.800463, 0.203858),
        new Point(-0.068622, 0.892137),
        new Point(0.416510, 0.941992),
        new Point(0.423822, 0.942395),
        new Point(0.163488, 0.987825),
        new Point(0.759290, 0.980387),
        new Point(0.445834, 0.992318),
        new Point(0.177717, 1.102425),
        new Point(-0.942148, 0.496138),
        new Point(0.720786, 1.197126),
        new Point(-0.830797, 0.662462),
        new Point(4.748839, 0.480514),
        new Point(0.658662, 2.656735),
        new Point(-13.741838, 0.341169),
        Point.INFINITE,
    };


    // Expected lines.  Each entry { a, b, c } indicates a line with the
    // equation a*x + b*y = c.  These lines are used in the description
    // of the edtges.
    private static final double[][] BIG_LINES = {
        { 1.000000, -0.291425, 0.858223 },
        { 1.000000, -0.021883, 0.472882 },
        { 1.000000, 0.252447, 0.084903 },
        { 0.431244, 1.000000, 0.412316 },
        { 1.000000, -0.102110, 0.668290 },
        { 1.000000, 0.063725, 0.264367 },
        { 1.000000, -0.400473, 0.781916 },
        { 1.000000, -0.081723, 0.647837 },
        { 1.000000, 0.049563, 0.277834 },
        { 1.000000, 0.319051, 0.152894 },
        { -0.992063, 1.000000, 0.003750 },
        { 1.000000, 0.521961, 0.888724 },
        { 1.000000, 0.683235, 0.517715 },
        { 1.000000, -0.041479, 0.320043 },
        { 1.000000, 0.016324, 0.606594 },
        { 1.000000, 0.648606, 0.812334 },
        { -0.902924, 1.000000, -0.687501 },
        { 0.511849, 1.000000, 0.330624 },
        { -0.248734, 1.000000, -0.153117 },
        { 1.000000, -0.068095, 0.617845 },
        { 0.689494, 1.000000, 0.651261 },
        { 1.000000, -0.516194, 0.030822 },
        { 1.000000, 0.121095, 0.849380 },
        { -0.584918, 1.000000, -0.000765 },
        { 0.530452, 1.000000, 0.143178 },
        { 1.000000, -0.111171, 0.617246 },
        { 1.000000, 0.862990, 0.535857 },
        { -0.629181, 1.000000, -0.161838 },
        { 1.000000, 0.505873, 0.132585 },
        { 0.248549, 1.000000, 0.128415 },
        { 1.000000, 0.491146, 0.341660 },
        { 1.000000, -0.433915, 0.029970 },
        { 1.000000, -0.727717, 0.355121 },
        { 0.453146, 1.000000, 0.226335 },
        { 1.000000, 0.651936, 0.301699 },
        { -0.591428, 1.000000, -0.288257 },
        { 1.000000, -0.245771, 0.273874 },
        { 1.000000, 0.750568, 0.688085 },
        { -0.982303, 1.000000, -0.570564 },
        { 0.361782, 1.000000, 0.341000 },
        { 0.127656, 1.000000, 0.260846 },
        { -0.547788, 1.000000, -0.300201 },
        { -0.568398, 1.000000, -0.103205 },
        { 1.000000, 0.238806, 0.788502 },
        { -0.583720, 1.000000, 0.005031 },
        { 1.000000, 0.868607, 0.488409 },
        { 1.000000, -0.432379, 0.263477 },
        { 1.000000, 0.648390, 1.010790 },
        { -0.646672, 1.000000, -0.252308 },
        { -0.087567, 1.000000, 0.109167 },
        { 1.000000, 0.651494, 0.880588 },
        { 0.197683, 1.000000, 0.295209 },
        { 1.000000, -0.806436, 0.397049 },
        { 1.000000, 0.570726, 0.629875 },
        { -0.157572, 1.000000, 0.233428 },
        { 1.000000, -0.000592, 0.827274 },
        { 0.667185, 1.000000, 0.904467 },
        { -0.540107, 1.000000, 0.042054 },
        { -0.062204, 1.000000, 0.264632 },
        { -0.961829, 1.000000, 0.043960 },
        { 0.101814, 1.000000, 0.405288 },
        { 1.000000, 0.121927, 0.169067 },
        { 0.822328, 1.000000, 0.673020 },
        { 1.000000, 0.497371, 1.123519 },
        { 1.000000, 0.820204, 1.198348 },
        { 1.000000, -0.496669, 0.011222 },
        { 0.330573, 1.000000, 0.541737 },
        { -0.128712, 1.000000, 0.341523 },
        { -0.991577, 1.000000, -0.499454 },
        { -0.032232, 1.000000, 0.273205 },
        { 1.000000, 0.705586, 0.841031 },
        { 1.000000, -0.807561, 0.449605 },
        { 1.000000, 0.269591, 0.221015 },
        { 1.000000, -0.263297, 0.756903 },
        { 0.549792, 1.000000, 0.668290 },
        { 1.000000, -0.408280, 0.466333 },
        { -0.188464, 1.000000, 0.354717 },
        { 1.000000, 0.650288, 0.803737 },
        { 1.000000, -0.117705, 0.678773 },
        { -0.560323, 1.000000, -0.152575 },
        { 0.568572, 1.000000, 0.686944 },
        { 1.000000, -0.183567, 0.499492 },
        { -0.710842, 1.000000, -0.056879 },
        { 1.000000, 0.349302, 0.759439 },
        { 0.697598, 1.000000, 1.027351 },
        { 0.201126, 1.000000, 0.452639 },
        { 0.032791, 1.000000, 0.424229 },
        { 1.000000, -0.953955, -0.191056 },
        { 1.000000, 0.453432, 0.561690 },
        { -0.838496, 1.000000, 0.232499 },
        { 1.000000, -0.894547, 0.150916 },
        { 0.052777, 1.000000, 0.425247 },
        { -0.264762, 1.000000, 0.155046 },
        { 1.000000, 0.948281, 0.452303 },
        { 1.000000, 0.883306, 1.194998 },
        { 1.000000, -0.426950, 0.737763 },
        { 1.000000, -0.322417, 0.721581 },
        { 0.735713, 1.000000, 1.016655 },
        { 1.000000, -0.182847, 0.126651 },
        { 1.000000, 0.431804, 1.014055 },
        { 0.257837, 1.000000, 0.454492 },
        { 1.000000, -0.456632, -0.056862 },
        { 0.668714, 1.000000, 0.435059 },
        { 1.000000, 0.415542, 0.248470 },
        { 1.000000, 0.334943, 0.860025 },
        { 0.225854, 1.000000, 0.444055 },
        { -0.598819, 1.000000, 0.126956 },
        { 1.000000, -0.393900, 0.299797 },
        { 0.900540, 1.000000, 0.694927 },
        { 0.549975, 1.000000, 0.582421 },
        { 0.110462, 1.000000, 0.422096 },
        { 1.000000, -0.111571, 0.022803 },
        { 0.459902, 1.000000, 0.542765 },
        { -0.175071, 1.000000, 0.319989 },
        { 0.020622, 1.000000, 0.187351 },
        { 1.000000, -0.042191, 0.345779 },
        { -0.039484, 1.000000, 0.447159 },
        { 1.000000, 0.065655, 0.739428 },
        { -0.927737, 1.000000, -0.269844 },
        { 0.156778, 1.000000, 0.635223 },
        { -0.159743, 1.000000, 0.506347 },
        { 0.390232, 1.000000, 0.522928 },
        { -0.121130, 1.000000, 0.390160 },
        { 1.000000, 0.028772, 0.044856 },
        { -0.933079, 1.000000, 0.420026 },
        { -0.657010, 1.000000, 0.240657 },
        { 1.000000, 0.205200, 0.938037 },
        { 1.000000, 0.725389, 0.715120 },
        { 1.000000, 0.031881, 0.604593 },
        { 1.000000, 0.702039, 1.041789 },
        { 0.422877, 1.000000, 0.738886 },
        { 1.000000, -0.227174, 0.477732 },
        { -0.377211, 1.000000, 0.267630 },
        { 1.000000, 0.320499, 0.377694 },
        { -0.668914, 1.000000, 0.310359 },
        { 0.638546, 1.000000, 1.066820 },
        { 1.000000, -0.719491, 0.440198 },
        { 1.000000, 0.769134, 1.323637 },
        { 0.259248, 1.000000, 0.746315 },
        { 0.282776, 1.000000, 0.567234 },
        { -0.771684, 1.000000, 0.340083 },
        { -0.289161, 1.000000, 0.224710 },
        { 0.646879, 1.000000, 0.632422 },
        { 0.853792, 1.000000, 0.812714 },
        { 0.272673, 1.000000, 0.569490 },
        { 1.000000, -0.294558, 0.013932 },
        { 1.000000, -0.685617, 0.402609 },
        { 0.143994, 1.000000, 0.622108 },
        { 0.061766, 1.000000, 0.611895 },
        { -0.083458, 1.000000, 0.574768 },
        { 1.000000, 0.735212, 0.892250 },
        { 1.000000, 0.442210, 0.360847 },
        { 0.188637, 1.000000, 0.645288 },
        { -0.733639, 1.000000, 0.453005 },
        { 1.000000, 0.691250, 0.596472 },
        { 1.000000, -0.665858, -0.203082 },
        { -0.758211, 1.000000, 0.555706 },
        { 1.000000, -0.061522, 0.163940 },
        { -0.811879, 1.000000, -0.033727 },
        { 0.392274, 1.000000, 0.783476 },
        { 1.000000, -0.291152, 0.574133 },
        { 1.000000, 0.364280, 0.859987 },
        { 1.000000, -0.939994, -0.433456 },
        { 0.856687, 1.000000, 0.666095 },
        { 0.190020, 1.000000, 0.605285 },
        { 1.000000, 0.008662, 0.872328 },
        { 1.000000, 0.575266, 0.394770 },
        { 1.000000, -0.111017, 0.025942 },
        { 1.000000, -0.043492, 0.266215 },
        { 1.000000, 0.100638, 0.538441 },
        { 0.971275, 1.000000, 1.540530 },
        { 1.000000, 0.974428, 0.859663 },
        { 1.000000, -0.125623, 0.218568 },
        { 0.019981, 1.000000, 0.477313 },
        { 0.845694, 1.000000, 0.831150 },
        { 1.000000, -0.356671, -0.065160 },
        { 1.000000, -0.764775, -0.154851 },
        { 0.100329, 1.000000, 0.631313 },
        { -0.230478, 1.000000, 0.414880 },
        { 0.841193, 1.000000, 1.344021 },
        { -0.369557, 1.000000, 0.351967 },
        { 0.869057, 1.000000, 1.291070 },
        { 1.000000, -0.131424, 0.853777 },
        { 0.015016, 1.000000, 0.649987 },
        { 1.000000, -0.830689, -0.518639 },
        { 1.000000, 0.670229, 1.267116 },
        { -0.123793, 1.000000, 0.657657 },
        { 0.158853, 1.000000, 0.695203 },
        { 1.000000, 0.137931, 0.225817 },
        { 0.736189, 1.000000, 0.743941 },
        { -0.151735, 1.000000, 0.586804 },
        { -0.511018, 1.000000, 0.579317 },
        { 1.000000, -0.098810, 0.761544 },
        { 1.000000, 0.629705, 0.628154 },
        { 1.000000, -0.705823, -0.416734 },
        { 0.055949, 1.000000, 0.695436 },
        { 1.000000, -0.031962, 0.455137 },
        { 0.179890, 1.000000, 0.730458 },
        { 1.000000, 0.687340, 0.532261 },
        { 1.000000, -0.407438, -0.078279 },
        { -0.023081, 1.000000, 0.728763 },
        { -0.547479, 1.000000, 0.663266 },
        { 1.000000, 0.594203, 0.751052 },
        { 0.008914, 1.000000, 0.522847 },
        { 1.000000, 0.294285, 0.314399 },
        { -0.077843, 1.000000, 0.727134 },
        { 0.428807, 1.000000, 0.987331 },
        { 0.618946, 1.000000, 1.210653 },
        { 1.000000, 0.696234, 1.303547 },
        { -0.804290, 1.000000, 0.028821 },
        { -0.995565, 1.000000, 0.171238 },
        { 1.000000, -0.273561, -0.168749 },
        { -0.179967, 1.000000, 0.573961 },
        { 1.000000, 0.997883, 0.920122 },
        { -0.454012, 1.000000, 0.614563 },
        { 1.000000, 0.245843, 0.656729 },
        { 1.000000, -0.884661, 0.005842 },
        { 1.000000, 0.321148, 0.409387 },
        { 0.066668, 1.000000, 0.797109 },
        { 0.136545, 1.000000, 0.789592 },
        { -0.510007, 1.000000, 0.734333 },
        { 0.732645, 1.000000, 1.429928 },
        { 1.000000, 0.943176, 1.317244 },
        { 0.574471, 1.000000, 1.117044 },
        { 1.000000, -0.025867, 0.555149 },
        { -0.890357, 1.000000, 0.144088 },
        { -0.234555, 1.000000, 0.563294 },
        { 1.000000, 0.404282, 0.924229 },
        { 1.000000, 0.038901, 0.657756 },
        { 1.000000, 0.677847, 0.576558 },
        { 1.000000, -0.206544, 0.148463 },
        { 1.000000, 0.229645, 1.086621 },
        { 0.104270, 1.000000, 0.902017 },
        { -0.686472, 1.000000, 0.472131 },
        { 1.000000, -0.269719, -0.069446 },
        { -0.049028, 1.000000, 0.798154 },
        { -0.495055, 1.000000, 0.739263 },
        { -0.069791, 1.000000, 0.842398 },
        { 1.000000, 0.789742, 0.792434 },
        { -0.584650, 1.000000, 0.601649 },
        { 1.000000, 0.895668, 1.011494 },
        { 1.000000, -0.407402, 0.414647 },
        { -0.006673, 1.000000, 0.879800 },
        { 1.000000, -0.000120, 0.120412 },
        { 1.000000, -0.350802, 0.617582 },
        { 0.380859, 1.000000, 0.934761 },
        { 1.000000, -0.396010, -0.065806 },
        { 1.000000, 0.248359, 0.954855 },
        { 0.999537, 1.000000, 1.275275 },
        { 1.000000, -0.865495, -0.174194 },
        { 1.000000, 0.312057, 0.488366 },
        { -0.392401, 1.000000, 0.778553 },
        { 0.667943, 1.000000, 0.846301 },
        { 1.000000, 0.228646, 0.490901 },
        { -0.233314, 1.000000, 0.724651 },
        { 0.512156, 1.000000, 1.189753 },
        { -0.800458, 1.000000, 0.410927 },
        { 0.193931, 1.000000, 0.978605 },
        { 1.000000, 0.296480, 0.855983 },
        { 1.000000, -0.648712, -0.320124 },
        { 0.629497, 1.000000, 1.272969 },
        { 1.000000, -0.449513, 0.182663 },
        { 1.000000, -0.051120, 0.381753 },
        { 0.623773, 1.000000, 1.454012 },
        { -0.250051, 1.000000, 0.909296 },
        { -0.657986, 1.000000, 0.268129 },
        { 1.000000, 0.051089, 0.471968 },
        { 0.122369, 1.000000, 0.992960 },
        { 1.000000, -0.316461, 0.449036 },
        { 1.000000, 0.837724, 1.101245 },
        { 1.000000, 0.665725, 0.821108 },
        { 1.000000, -0.887837, -0.713539 },
        { -0.042643, 1.000000, 0.237992 },
        { 0.260959, 1.000000, 0.874230 },
        { -0.055080, 1.000000, 0.919051 },
        { 1.000000, -0.440906, 0.008315 },
        { 1.000000, -0.124157, 0.040843 },
        { 1.000000, 0.177651, 0.933457 },
        { 1.000000, -0.127870, 0.318946 },
        { 1.000000, 0.063522, 0.247745 },
        { -0.012107, 1.000000, 0.507545 },
        { 1.000000, 0.042562, 0.771739 },
        { -0.024885, 1.000000, 0.683137 },
        { 0.029243, 1.000000, 0.619382 },
        { 1.000000, -0.033513, 0.569627 },
        { -0.017742, 1.000000, 0.584978 },
    };
    

    // Expected edges.  Each entry { l, v1, v2 } indicates a Voronoi edge,
    // which is the segment of the line with index l that extends from
    // Voronoi vertex v1 to v2.  If either vertex has the value -1,
    // this indicates that the line segment is actually a semi-infinite
    // ray, which extends to infinity on that side.
    private static final int[][] BIG_EDGES = {
        { 4, 0, 1 },
        { 5, 2, 0 },
        { 0, 1, 3 },
        { 8, 4, 2 },
        { 7, 1, 5 },
        { 6, 5, 6 },
        { 14, 7, 5 },
        { 11, 8, 3 },
        { 2, 9, 2 },
        { 16, 6, 10 },
        { 20, 10, 8 },
        { 9, 11, 4 },
        { 19, 7, 12 },
        { 12, 13, 7 },
        { 17, 13, 12 },
        { 21, 9, 14 },
        { 24, 14, 11 },
        { 13, 4, 15 },
        { 28, 16, 14 },
        { 27, 15, 17 },
        { 26, 17, 13 },
        { 23, 11, 18 },
        { 33, 18, 19 },
        { 30, 19, 15 },
        { 25, 12, 20 },
        { 35, 20, 21 },
        { 15, 21, 6 },
        { 22, 22, 10 },
        { 32, 17, 23 },
        { 38, 21, 24 },
        { 40, 24, 22 },
        { 36, 19, 25 },
        { 44, 25, 26 },
        { 39, 26, 23 },
        { 41, 22, 27 },
        { 43, 28, 24 },
        { 37, 29, 20 },
        { 42, 23, 30 },
        { 51, 30, 29 },
        { 48, 28, 31 },
        { 47, 31, 27 },
        { 45, 32, 25 },
        { 31, 16, 33 },
        { 34, 33, 18 },
        { 53, 34, 30 },
        { 61, 36, 33 },
        { 64, 35, 37 },
        { 49, 27, 37 },
        { 55, 31, 38 },
        { 52, 29, 39 },
        { 69, 39, 40 },
        { 50, 40, 28 },
        { 65, 36, 41 },
        { 58, 41, 32 },
        { 68, 38, 42 },
        { 56, 42, 35 },
        { 70, 43, 39 },
        { 57, 34, 44 },
        { 74, 44, 43 },
        { 71, 40, 45 },
        { 60, 45, 38 },
        { 77, 46, 44 },
        { 75, 43, 47 },
        { 63, 48, 35 },
        { 46, 26, 49 },
        { 62, 49, 34 },
        { 80, 51, 46 },
        { 72, 52, 41 },
        { 89, 52, 50 },
        { 73, 42, 53 },
        { 92, 53, 54 },
        { 84, 54, 48 },
        { 94, 55, 53 },
        { 87, 50, 56 },
        { 97, 57, 55 },
        { 66, 37, 58 },
        { 18, 8, 58 },
        { 93, 59, 52 },
        { 102, 60, 59 },
        { 78, 45, 61 },
        { 86, 61, 57 },
        { 91, 62, 51 },
        { 88, 63, 49 },
        { 106, 63, 62 },
        { 85, 56, 64 },
        { 67, 50, 64 },
        { 103, 65, 60 },
        { 110, 64, 66 },
        { 112, 66, 67 },
        { 59, 32, 67 },
        { 29, 68, 16 },
        { 54, 68, 36 },
        { 113, 67, 69 },
        { 109, 69, 63 },
        { 82, 47, 70 },
        { 104, 70, 61 },
        { 99, 71, 57 },
        { 96, 55, 72 },
        { 121, 73, 74 },
        { 111, 65, 74 },
        { 118, 71, 75 },
        { 119, 75, 72 },
        { 115, 69, 76 },
        { 81, 46, 77 },
        { 83, 77, 47 },
        { 117, 78, 70 },
        { 116, 78, 71 },
        { 90, 51, 79 },
        { 128, 79, 77 },
        { 131, 79, 80 },
        { 98, 56, 81 },
        { 108, 81, 66 },
        { 126, 82, 75 },
        { 122, 72, 83 },
        { 133, 84, 81 },
        { 138, 83, 85 },
        { 95, 54, 85 },
        { 101, 59, 86 },
        { 139, 86, 84 },
        { 127, 87, 76 },
        { 142, 88, 86 },
        { 135, 89, 82 },
        { 107, 62, 90 },
        { 130, 90, 80 },
        { 124, 74, 91 },
        { 144, 91, 88 },
        { 145, 88, 92 },
        { 153, 92, 93 },
        { 123, 94, 73 },
        { 155, 93, 95 },
        { 129, 96, 78 },
        { 158, 96, 97 },
        { 148, 97, 89 },
        { 132, 80, 98 },
        { 159, 98, 96 },
        { 151, 99, 91 },
        { 136, 82, 100 },
        { 137, 100, 83 },
        { 156, 94, 101 },
        { 164, 101, 102 },
        { 163, 102, 99 },
        { 140, 84, 103 },
        { 143, 103, 87 },
        { 125, 76, 104 },
        { 150, 104, 90 },
        { 147, 93, 105 },
        { 168, 103, 105 },
        { 105, 106, 65 },
        { 120, 106, 73 },
        { 152, 95, 107 },
        { 162, 99, 108 },
        { 154, 108, 92 },
        { 174, 107, 109 },
        { 172, 105, 109 },
        { 141, 85, 110 },
        { 165, 111, 100 },
        { 160, 97, 112 },
        { 178, 111, 113 },
        { 170, 113, 110 },
        { 166, 114, 101 },
        { 146, 89, 115 },
        { 179, 115, 111 },
        { 167, 102, 117 },
        { 186, 117, 116 },
        { 187, 116, 118 },
        { 175, 108, 118 },
        { 180, 112, 119 },
        { 185, 119, 115 },
        { 157, 95, 120 },
        { 171, 120, 107 },
        { 189, 121, 117 },
        { 134, 87, 122 },
        { 169, 122, 104 },
        { 184, 114, 123 },
        { 195, 123, 121 },
        { 191, 118, 124 },
        { 193, 124, 120 },
        { 188, 125, 116 },
        { 176, 109, 126 },
        { 177, 110, 127 },
        { 79, 48, 127 },
        { 194, 121, 128 },
        { 200, 128, 125 },
        { 181, 129, 112 },
        { 190, 129, 130 },
        { 207, 130, 131 },
        { 192, 119, 131 },
        { 197, 126, 132 },
        { 196, 122, 132 },
        { 198, 133, 123 },
        { 199, 124, 134 },
        { 210, 132, 135 },
        { 212, 135, 136 },
        { 161, 136, 98 },
        { 201, 125, 137 },
        { 213, 137, 134 },
        { 204, 138, 128 },
        { 182, 113, 139 },
        { 206, 141, 129 },
        { 216, 136, 142 },
        { 226, 142, 141 },
        { 222, 140, 143 },
        { 227, 143, 142 },
        { 211, 133, 144 },
        { 219, 144, 138 },
        { 214, 134, 145 },
        { 202, 145, 126 },
        { 209, 131, 146 },
        { 221, 146, 139 },
        { 220, 138, 147 },
        { 217, 147, 137 },
        { 223, 148, 140 },
        { 234, 147, 149 },
        { 230, 145, 150 },
        { 225, 141, 151 },
        { 208, 151, 130 },
        { 238, 152, 149 },
        { 231, 153, 146 },
        { 240, 154, 150 },
        { 241, 151, 155 },
        { 232, 155, 153 },
        { 215, 156, 135 },
        { 235, 156, 148 },
        { 233, 148, 157 },
        { 224, 140, 157 },
        { 236, 149, 158 },
        { 245, 158, 154 },
        { 229, 159, 144 },
        { 237, 159, 152 },
        { 246, 154, 160 },
        { 228, 161, 143 },
        { 249, 157, 162 },
        { 256, 162, 163 },
        { 255, 163, 161 },
        { 253, 164, 160 },
        { 258, 165, 163 },
        { 239, 150, 166 },
        { 248, 166, 156 },
        { 244, 153, 167 },
        { 262, 166, 168 },
        { 242, 168, 162 },
        { 254, 161, 169 },
        { 247, 169, 155 },
        { 259, 164, 170 },
        { 250, 171, 158 },
        { 257, 171, 164 },
        { 243, 152, 172 },
        { 114, 173, 68 },
        { 76, 173, 60 },
        { 252, 174, 159 },
        { 264, 174, 172 },
        { 267, 170, 175 },
        { 251, 160, 175 },
        { 274, 175, 176 },
        { 266, 176, 168 },
        { 271, 172, 177 },
        { 270, 177, 171 },
        { 268, 169, 178 },
        { 263, 178, 167 },
        { 275, 176, 179 },
        { 260, 179, 165 },
        { 276, 177, 180 },
        { 269, 180, 170 },
        { 173, 181, 106 },
        { 149, 181, 94 },
        { 261, 165, 182 },
        { 277, 182, 178 },
        { 183, 183, 114 },
        { 205, 183, 133 },
        { 218, 139, 184 },
        { 203, 127, 184 },
        { 278, 179, 185 },
        { 281, 185, 182 },
        { 280, 186, 181 },
        { 282, 186, 183 },
        { 1, -1, 0 },
        { 10, -1, 9 },
        { 272, -1, 173 },
        { 285, -1, 186 },
        { 273, -1, 174 },
        { 279, -1, 180 },
        { 284, 185, -1 },
        { 265, 167, -1 },
        { 283, 184, -1 },
        { 100, 58, -1 },
        { 3, 3, -1 },
    };


    /**
     * Run a test on the big test data.
     */
    public void testBig() {
        MathTools.setPrecision(100000.0);
        voronoiTest(BIG_SITES, BIG_VERTS, BIG_LINES, BIG_EDGES);
    }

}

